/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ulb.lisa.his.view;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import ulb.lisa.his.database.PersonJpaController;
import ulb.lisa.his.database.PractitionerJpaController;
import ulb.lisa.his.database.exceptions.NonexistentEntityException;
import ulb.lisa.his.model.Person;
import ulb.lisa.his.model.Practitioner;

/**
 *
 * @author Adrien Foucart
 */
public class CreatePractitionerForm extends javax.swing.JFrame {
    
    private Practitioner currentPrac;
    private final EntityManagerFactory emfac;
    
    /**
     * Creates new form CreatePractitionerForm
     * @param emfac
     */
    public CreatePractitionerForm(EntityManagerFactory emfac) {
        this(emfac, null);
    }
    
    public CreatePractitionerForm(EntityManagerFactory emfac, Practitioner currentPrac){
        this.currentPrac = currentPrac;
        this.emfac = emfac;
        initComponents();
        
        if( currentPrac != null ){
            personForm.setPerson(currentPrac.getPerson());
            qualificationBox.setSelectedItem(currentPrac.getQualificationCode());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        personForm = new ulb.lisa.his.view.CreatePersonForm();
        jLabel1 = new javax.swing.JLabel();
        qualificationBox = new javax.swing.JComboBox<>();
        createPractitionerButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Practitioner");

        jLabel1.setText("Qualification");

        qualificationBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CMA", "CNM", "CRN", "MD", "MT", "RPH" }));

        createPractitionerButton.setText("Save");
        createPractitionerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPractitionerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(personForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)
                                .addGap(64, 64, 64)
                                .addComponent(qualificationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(createPractitionerButton))
                        .addGap(0, 454, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(qualificationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addComponent(createPractitionerButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createPractitionerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPractitionerButtonActionPerformed
        try {
            Person per = personForm.getPerson();
            if( currentPrac == null ) currentPrac = new Practitioner();
            currentPrac.setPerson(per);
            currentPrac.setQualificationCode(qualificationBox.getSelectedItem().toString());
            currentPrac.setActive(true);
            
            PersonJpaController personController = new PersonJpaController(emfac);
            if( per.getIdPerson() == null )
                personController.create(per);
            else
                personController.edit(per);
            
            PractitionerJpaController pracController = new PractitionerJpaController(emfac);
            if( currentPrac.getIdPractitioner() == null )
                pracController.create(currentPrac);
            else
                pracController.edit(currentPrac);
            
            this.dispose();
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(CreatePractitionerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CreatePractitionerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_createPractitionerButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createPractitionerButton;
    private javax.swing.JLabel jLabel1;
    private ulb.lisa.his.view.CreatePersonForm personForm;
    private javax.swing.JComboBox<String> qualificationBox;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
