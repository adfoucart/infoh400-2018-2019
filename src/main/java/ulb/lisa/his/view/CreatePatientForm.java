/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ulb.lisa.his.view;

import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import ulb.lisa.his.database.PatientJpaController;
import ulb.lisa.his.database.PersonJpaController;
import ulb.lisa.his.model.Patient;
import ulb.lisa.his.model.Person;
import ulb.lisa.his.model.Practitioner;
import ulb.lisa.his.util.BeID;

/**
 *
 * @author Adrien Foucart
 */
public class CreatePatientForm extends javax.swing.JFrame {
    
    DefaultComboBoxModel<Practitioner> gpModel = null;
    private final EntityManagerFactory emfac;
    Patient currentPat = null;
    
    /**
     * Creates new form AddPatientWindow
     * @param emfac
     * @param practitioners
     */
    public CreatePatientForm(EntityManagerFactory emfac, List<Practitioner> practitioners) {
        this(emfac, practitioners, null);
    }
    
    public CreatePatientForm(EntityManagerFactory emfac, List<Practitioner> practitioners, Patient currentPat){
        this.emfac = emfac;
        this.currentPat = currentPat;
        
        gpModel = new DefaultComboBoxModel();
        Practitioner noprac = new Practitioner(-1);
        noprac.setPerson(new Person(-1));
        gpModel.addElement(noprac);
        for( Practitioner p : practitioners ){
            gpModel.addElement(p);
        }
        
        initComponents();
        
        generalPractitionerSelect.setModel(gpModel);
        if( currentPat != null ){
            personForm.setPerson(currentPat.getPerson());
            if( currentPat.getGeneralPractitioner() != null )
                generalPractitionerSelect.setSelectedItem(currentPat.getGeneralPractitioner());
        }
        
        if( BeID.getInstance().hasCard() ) eIDPatientConsentButton.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        generalPractitionerSelect = new javax.swing.JComboBox<>();
        doCreatePatientButton = new javax.swing.JButton();
        personForm = new ulb.lisa.his.view.CreatePersonForm();
        eIDPatientConsentButton = new javax.swing.JButton();
        patientConsentCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Patient");

        jLabel8.setText("General Practitioner");

        doCreatePatientButton.setText("Save");
        doCreatePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doCreatePatientButtonActionPerformed(evt);
            }
        });

        eIDPatientConsentButton.setText("Patient Consent");
        eIDPatientConsentButton.setEnabled(false);
        eIDPatientConsentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eIDPatientConsentButtonActionPerformed(evt);
            }
        });

        patientConsentCheckBox.setText("Patient has not given consent");
        patientConsentCheckBox.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(personForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doCreatePatientButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(eIDPatientConsentButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(patientConsentCheckBox))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(26, 26, 26)
                                        .addComponent(generalPractitionerSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 370, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(generalPractitionerSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eIDPatientConsentButton)
                    .addComponent(patientConsentCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(doCreatePatientButton)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doCreatePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doCreatePatientButtonActionPerformed
        try {
            Person per = personForm.getPerson();
            if( currentPat == null ) currentPat = new Patient();
            currentPat.setPerson(per);
            currentPat.setActive(true);
            Practitioner selectedPrac = (Practitioner) generalPractitionerSelect.getSelectedItem();
            if( selectedPrac.getIdPractitioner() != -1 )
                currentPat.setGeneralPractitioner(selectedPrac);
            PersonJpaController personController = new PersonJpaController(emfac);
            if( per.getIdPerson() == null )
                personController.create(per);
            else
                personController.edit(per);
            
            PatientJpaController patientController = new PatientJpaController(emfac);
            if( currentPat.getIdPatient() == null )
                patientController.create(currentPat);
            else
                patientController.edit(currentPat);
            
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(CreatePatientForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_doCreatePatientButtonActionPerformed

    private void eIDPatientConsentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eIDPatientConsentButtonActionPerformed

        if( personForm.getPerson() == null || personForm.getPerson().getNationalNumber() == null ) return;
        
        if( BeID.getInstance().authenticate(personForm.getPerson()) ){
            patientConsentCheckBox.setSelected(true);
            patientConsentCheckBox.setText("Patient has given consent");
        }
        else {
            patientConsentCheckBox.setSelected(false);
            eIDPatientConsentButton.setBackground(Color.red);
        }
    }//GEN-LAST:event_eIDPatientConsentButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doCreatePatientButton;
    private javax.swing.JButton eIDPatientConsentButton;
    private javax.swing.JComboBox<Practitioner> generalPractitionerSelect;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JCheckBox patientConsentCheckBox;
    private ulb.lisa.his.view.CreatePersonForm personForm;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
