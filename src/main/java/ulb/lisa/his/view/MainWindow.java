/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ulb.lisa.his.view;

import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import ulb.lisa.his.database.PatientJpaController;
import ulb.lisa.his.database.PractitionerJpaController;
import ulb.lisa.his.database.UserJpaController;
import ulb.lisa.his.model.Patient;
import ulb.lisa.his.model.Practitioner;
import ulb.lisa.his.model.User;
import ulb.lisa.his.util.BeIDCard;

/**
 *
 * @author Adrien Foucart
 */
public class MainWindow extends javax.swing.JFrame {
    
    private final EntityManagerFactory emfac = Persistence.createEntityManagerFactory("HIS");
    private final PatientJpaController patientController = new PatientJpaController(emfac);
    private final PractitionerJpaController pracController = new PractitionerJpaController(emfac);
    private final UserJpaController userController = new UserJpaController(emfac);
    
    private PersonListModel<Patient> patientModel = null;
    private PersonListModel<Practitioner> practitionerModel = null;
    private PersonListModel<User> userModel = null;
    
    private final BeIDCard cardReader = BeIDCard.getInstance();
    
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        patientModel = new PersonListModel(patientController.findPatientEntities());
        practitionerModel = new PersonListModel(pracController.findPractitionerEntities());
        userModel = new PersonListModel(userController.findUserEntities());
        
        initComponents();
        
        patientList.setModel(patientModel);
        practitionerList.setModel(practitionerModel);
        userList.setModel(userModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        refreshButton = new javax.swing.JButton();
        addPatientButton = new javax.swing.JButton();
        addPractitionerButton = new javax.swing.JButton();
        addStudyButton = new javax.swing.JButton();
        addUserButton = new javax.swing.JButton();
        DICOMViewerButton = new javax.swing.JButton();
        mainTabs = new javax.swing.JTabbedPane();
        patientListPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientDetails = new javax.swing.JTextArea();
        editPatientButton = new javax.swing.JButton();
        makeUserFromPatientButton = new javax.swing.JButton();
        practitionerListPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        practitionerList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        pracitionerDetails = new javax.swing.JTextArea();
        editPractitionerButton = new javax.swing.JButton();
        makeUserFromPracButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        userDetails = new javax.swing.JTextArea();
        editUserButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        refreshButton.setText("Refresh");
        refreshButton.setFocusable(false);
        refreshButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(refreshButton);

        addPatientButton.setText("Add Patient");
        addPatientButton.setFocusable(false);
        addPatientButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addPatientButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addPatientButton);

        addPractitionerButton.setText("Add Practitioner");
        addPractitionerButton.setFocusable(false);
        addPractitionerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addPractitionerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addPractitionerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPractitionerButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addPractitionerButton);

        addStudyButton.setText("Add Study");
        addStudyButton.setFocusable(false);
        addStudyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addStudyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addStudyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudyButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addStudyButton);

        addUserButton.setText("Add User");
        addUserButton.setFocusable(false);
        addUserButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addUserButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addUserButton);

        DICOMViewerButton.setText("DICOM Viewer");
        DICOMViewerButton.setFocusable(false);
        DICOMViewerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DICOMViewerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DICOMViewerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DICOMViewerButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(DICOMViewerButton);

        patientList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientListMouseClicked(evt);
            }
        });
        patientList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                patientListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(patientList);

        patientDetails.setEditable(false);
        patientDetails.setColumns(20);
        patientDetails.setRows(5);
        jScrollPane2.setViewportView(patientDetails);

        editPatientButton.setText("Edit");
        editPatientButton.setEnabled(false);
        editPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatientButtonActionPerformed(evt);
            }
        });

        makeUserFromPatientButton.setText("Make User");
        makeUserFromPatientButton.setEnabled(false);
        makeUserFromPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeUserFromPatientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout patientListPanelLayout = new javax.swing.GroupLayout(patientListPanel);
        patientListPanel.setLayout(patientListPanelLayout);
        patientListPanelLayout.setHorizontalGroup(
            patientListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientListPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addGroup(patientListPanelLayout.createSequentialGroup()
                        .addComponent(editPatientButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makeUserFromPatientButton)))
                .addContainerGap())
        );
        patientListPanelLayout.setVerticalGroup(
            patientListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patientListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(patientListPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editPatientButton)
                            .addComponent(makeUserFromPatientButton))
                        .addGap(0, 6, Short.MAX_VALUE))))
        );

        mainTabs.addTab("Patient List", patientListPanel);

        practitionerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                practitionerListMouseClicked(evt);
            }
        });
        practitionerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                practitionerListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(practitionerList);

        pracitionerDetails.setEditable(false);
        pracitionerDetails.setColumns(20);
        pracitionerDetails.setRows(5);
        jScrollPane4.setViewportView(pracitionerDetails);

        editPractitionerButton.setText("Edit");
        editPractitionerButton.setEnabled(false);
        editPractitionerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPractitionerButtonActionPerformed(evt);
            }
        });

        makeUserFromPracButton.setText("Make User");
        makeUserFromPracButton.setEnabled(false);
        makeUserFromPracButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeUserFromPracButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout practitionerListPanelLayout = new javax.swing.GroupLayout(practitionerListPanel);
        practitionerListPanel.setLayout(practitionerListPanelLayout);
        practitionerListPanelLayout.setHorizontalGroup(
            practitionerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(practitionerListPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(practitionerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addGroup(practitionerListPanelLayout.createSequentialGroup()
                        .addComponent(editPractitionerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makeUserFromPracButton)))
                .addContainerGap())
        );
        practitionerListPanelLayout.setVerticalGroup(
            practitionerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(practitionerListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(practitionerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(practitionerListPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(practitionerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editPractitionerButton)
                            .addComponent(makeUserFromPracButton))
                        .addGap(0, 6, Short.MAX_VALUE))))
        );

        mainTabs.addTab("Practitioner List", practitionerListPanel);

        userList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userListMouseClicked(evt);
            }
        });
        userList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                userListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(userList);

        userDetails.setEditable(false);
        userDetails.setColumns(20);
        userDetails.setRows(5);
        jScrollPane6.setViewportView(userDetails);

        editUserButton.setText("Edit");
        editUserButton.setEnabled(false);
        editUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editUserButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editUserButton)
                        .addGap(0, 6, Short.MAX_VALUE))))
        );

        mainTabs.addTab("User List", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainTabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        CreatePatientForm popup = new CreatePatientForm(emfac, practitionerModel.getAll());
        popup.setVisible(true);
    }//GEN-LAST:event_addPatientButtonActionPerformed
    
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        patientModel = new PersonListModel(patientController.findPatientEntities());
        practitionerModel = new PersonListModel(pracController.findPractitionerEntities());
        userModel = new PersonListModel(userController.findUserEntities());
        
        patientList.setModel(patientModel);
        practitionerList.setModel(practitionerModel);
        userList.setModel(userModel);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void addPractitionerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPractitionerButtonActionPerformed
        CreatePractitionerForm popup = new CreatePractitionerForm(emfac);
        popup.setVisible(true);
    }//GEN-LAST:event_addPractitionerButtonActionPerformed

    private void practitionerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_practitionerListValueChanged
        setPractitionerDetails();
    }//GEN-LAST:event_practitionerListValueChanged
        
    private void patientListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_patientListValueChanged
        setPatientDetails();
    }//GEN-LAST:event_patientListValueChanged

    private void editPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatientButtonActionPerformed
        int idx = patientList.getSelectedIndex();
        if( idx < 0 ) return;
        
        Patient pat = (Patient) patientModel.getElementAt(idx);
        
        CreatePatientForm popup = new CreatePatientForm(emfac, practitionerModel.getAll(), pat);
        popup.setVisible(true);
    }//GEN-LAST:event_editPatientButtonActionPerformed

    
    private void editPractitionerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPractitionerButtonActionPerformed
        int idx = practitionerList.getSelectedIndex();
        if( idx < 0 ) return;
        
        Practitioner prac = (Practitioner) practitionerModel.getElementAt(idx);
        
        CreatePractitionerForm popup = new CreatePractitionerForm(emfac, prac);
        popup.setVisible(true);
    }//GEN-LAST:event_editPractitionerButtonActionPerformed

    private void practitionerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_practitionerListMouseClicked
        setPractitionerDetails();
    }//GEN-LAST:event_practitionerListMouseClicked

    private void patientListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientListMouseClicked
        setPatientDetails();
    }//GEN-LAST:event_patientListMouseClicked

    private void addStudyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudyButtonActionPerformed
        CreateStudyForm popup = new CreateStudyForm(emfac, practitionerModel.getAll(), patientModel.getAll());
        popup.setVisible(true);
    }//GEN-LAST:event_addStudyButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        CreateUserForm popup = new CreateUserForm(emfac);
        popup.setVisible(true);
    }//GEN-LAST:event_addUserButtonActionPerformed
    
    
    private void userListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMouseClicked
        setUserDetails();
    }//GEN-LAST:event_userListMouseClicked

    private void userListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_userListValueChanged
        setUserDetails();
    }//GEN-LAST:event_userListValueChanged

    private void editUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButtonActionPerformed
        int idx = userList.getSelectedIndex();
        if( idx < 0 ) return;
        
        User user = (User) userModel.getElementAt(idx);
        
        CreateUserForm popup = new CreateUserForm(emfac, user);
        popup.setVisible(true);
    }//GEN-LAST:event_editUserButtonActionPerformed

    private void makeUserFromPracButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeUserFromPracButtonActionPerformed
        int idx = practitionerList.getSelectedIndex();
        if( idx < 0 ) return;
        
        Practitioner prac = (Practitioner) practitionerModel.getElementAt(idx);
        User user = new User();
        user.setPerson(prac.getPerson());
        
        CreateUserForm popup = new CreateUserForm(emfac, user);
        popup.setVisible(true);
    }//GEN-LAST:event_makeUserFromPracButtonActionPerformed

    private void makeUserFromPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeUserFromPatientButtonActionPerformed
        int idx = patientList.getSelectedIndex();
        if( idx < 0 ) return;
        
        Patient pat = (Patient) patientModel.getElementAt(idx);
        User user = new User();
        user.setPerson(pat.getPerson());
        
        CreateUserForm popup = new CreateUserForm(emfac, user);
        popup.setVisible(true);
    }//GEN-LAST:event_makeUserFromPatientButtonActionPerformed

    private void DICOMViewerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DICOMViewerButtonActionPerformed
        DICOMViewer popup = new DICOMViewer();
        popup.setVisible(true);
    }//GEN-LAST:event_DICOMViewerButtonActionPerformed

    private void setPatientDetails(){
        int idx = patientList.getSelectedIndex();
        if( idx < 0 ) return;

        Patient pat = (Patient) patientModel.getElementAt(idx);

        patientDetails.setText(pat.getFormattedText());
        editPatientButton.setEnabled(true);
        makeUserFromPatientButton.setEnabled(true);
    }
    private void setPractitionerDetails(){
        int idx = practitionerList.getSelectedIndex();
        if( idx < 0 ) return;
        
        Practitioner prac = (Practitioner) practitionerModel.getElementAt(idx);
        
        pracitionerDetails.setText(prac.getFormattedText());
        editPractitionerButton.setEnabled(true);
        makeUserFromPracButton.setEnabled(true);
    }
    private void setUserDetails(){
        int idx = userList.getSelectedIndex();
        if( idx < 0 ) return;
        
        User user = (User) userModel.getElementAt(idx);
        
        userDetails.setText(user.getFormattedText());
        editUserButton.setEnabled(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DICOMViewerButton;
    private javax.swing.JButton addPatientButton;
    private javax.swing.JButton addPractitionerButton;
    private javax.swing.JButton addStudyButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton editPatientButton;
    private javax.swing.JButton editPractitionerButton;
    private javax.swing.JButton editUserButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTabbedPane mainTabs;
    private javax.swing.JButton makeUserFromPatientButton;
    private javax.swing.JButton makeUserFromPracButton;
    private javax.swing.JTextArea patientDetails;
    private javax.swing.JList<String> patientList;
    private javax.swing.JPanel patientListPanel;
    private javax.swing.JTextArea pracitionerDetails;
    private javax.swing.JList<String> practitionerList;
    private javax.swing.JPanel practitionerListPanel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextArea userDetails;
    private javax.swing.JList<String> userList;
    // End of variables declaration//GEN-END:variables
}
